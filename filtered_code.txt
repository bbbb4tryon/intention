./intention_project.txt:    @Published var lastError: Error?                /// Used to trigger the UI visual error overlay
./intention_project.txt:                await MainActor.run { self.countdownRemaining = remaining }
./intention_project.txt:            //            await MainActor.run { self.countdownRemaining -= 1 }
./intention_project.txt:            await MainActor.run {
./intention_project.txt:            //        await MainActor.run { self.naturallyAdvanceSessionChunk() }
./intention_project.txt:            await MainActor.run { self.chunkCountdown = nil }
./intention_project.txt://        await MainActor.run { self.naturallyAdvanceSessionChunk() }
./intention_project.txt://                await MainActor.run {
./intention_project.txt:    @Published var lastError: Error?
./intention_project.txt:              await MainActor.run { self.lastError = error }
./intention_project.txt:            await MainActor.run { self.lastError = HistoryError.saveHistoryFailed }
./intention_project.txt:            await MainActor.run { self.pendingSnapshot = nil }
./intention_project.txt:    @Published var lastError: Error? = nil
./intention_project.txt:                    await MainActor.run {
./intention_project.txt:                    await MainActor.run { self.promptText = "" }
./intention_project.txt:                await MainActor.run { self.timeRemaining -= 1 }
./intention_project.txt:            await MainActor.run {
./intention_project.txt:            await MainActor.run { self.onCompleted?(.balancing) }
./intention_project.txt:                    await MainActor.run {
./intention_project.txt:                        await MainActor.run { self.timeRemaining = max(0, self.timeRemaining - 1) }
./intention_project.txt:            await MainActor.run {
./intention_project.txt:               await MainActor.run { self.timeRemaining = max(0, self.timeRemaining - 1) }
./intention_project.txt:    @Published var lastError: Error?
./intention_project.txt:                await MainActor.run { self.lastError = error }
./intention_project.txt:            await MainActor.run { self.lastError = error }
./intention_project.txt:                                    // _ = await MainActor.run {  MembershipError.restoreFailed }
./intention_project.txt:    @Published var lastError: Error?                /// Used to trigger the UI visual error overlay
./intention_project.txt:/// for background tasks, just hop to main when calling: await MainActor.run { haptics.notifyDone() }
./intention_project.txt:///        await MainActor.run { engine.tapLight() } }
./intention_project.txt:///        await MainActor.run { engine.doubleLight() } }
./intention_project.txt:///        await MainActor.run { engine.longLongShort() } }
./intention/Features/Focus/FocusSessionVM.swift:    @Published var lastError: Error?                /// Used to trigger the UI visual error overlay
./intention/Features/Focus/FocusSessionVM.swift:                await MainActor.run { self.countdownRemaining = remaining }
./intention/Features/Focus/FocusSessionVM.swift:            //            await MainActor.run { self.countdownRemaining -= 1 }
./intention/Features/Focus/FocusSessionVM.swift:            await MainActor.run {
./intention/Features/Focus/FocusSessionVM.swift:            //        await MainActor.run { self.naturallyAdvanceSessionChunk() }
./intention/Features/Focus/FocusSessionVM.swift:            await MainActor.run { self.chunkCountdown = nil }
./intention/Features/Focus/FocusSessionVM.swift://        await MainActor.run { self.naturallyAdvanceSessionChunk() }
./intention/Features/Focus/FocusSessionVM.swift://                await MainActor.run {
./intention/Features/Focus/FocusSessionVM.swift:                    await MainActor.run { self.countdownRemaining = remaining }
./intention/Features/Focus/FocusSessionVM.swift:                await MainActor.run {
./intention/Features/History/HistoryVM.swift:    @Published var lastError: Error?
./intention/Features/History/HistoryVM.swift:              await MainActor.run { self.lastError = error }
./intention/Features/History/HistoryVM.swift:            await MainActor.run { self.lastError = HistoryError.saveHistoryFailed }
./intention/Features/History/HistoryVM.swift:            await MainActor.run { self.pendingSnapshot = nil }
./intention/Features/Recalibration/RecalibrationVM.swift:    @Published var lastError: Error? = nil
./intention/Features/Recalibration/RecalibrationVM.swift:                    await MainActor.run {
./intention/Features/Recalibration/RecalibrationVM.swift:                    await MainActor.run { self.promptText = "" }
./intention/Features/Recalibration/RecalibrationVM.swift:                await MainActor.run { self.timeRemaining -= 1 }
./intention/Features/Recalibration/RecalibrationVM.swift:            await MainActor.run {
./intention/Features/Recalibration/RecalibrationVM.swift:            await MainActor.run { self.onCompleted?(.balancing) }
./intention/Features/Recalibration/RecalibrationVM.swift:                    await MainActor.run {
./intention/Features/Recalibration/RecalibrationVM.swift:                        await MainActor.run { self.timeRemaining = max(0, self.timeRemaining - 1) }
./intention/Features/Recalibration/RecalibrationVM.swift:            await MainActor.run {
./intention/Features/Recalibration/RecalibrationVM.swift:               await MainActor.run { self.timeRemaining = max(0, self.timeRemaining - 1) }
./intention/Features/Stats/StatsVM.swift:    @Published var lastError: Error?
./intention/Features/Stats/StatsVM.swift:                await MainActor.run { self.lastError = error }
./intention/Features/Stats/StatsVM.swift:            await MainActor.run { self.lastError = error }
./intention/Features/Membership/MembershipSheetV.swift:                                    // _ = await MainActor.run {  MembershipError.restoreFailed }
./intention/Features/Membership/MembershipVM.swift:    @Published var lastError: Error?                /// Used to trigger the UI visual error overlay
./intention/Shared/Haptics/LiveHapticsClient.swift:/// for background tasks, just hop to main when calling: await MainActor.run { haptics.notifyDone() }
./intention/Shared/Haptics/LiveHapticsClient.swift:///        await MainActor.run { engine.tapLight() } }
./intention/Shared/Haptics/LiveHapticsClient.swift:///        await MainActor.run { engine.doubleLight() } }
./intention/Shared/Haptics/LiveHapticsClient.swift:///        await MainActor.run { engine.longLongShort() } }
Binary file ./.git/objects/92/ccc10f11813f8235295ac849b2c9f506b9bcf5 matches
Binary file ./.git/objects/0c/25ec03bce502eaa4eb18acf33c25bfad0bb4bd matches
Binary file ./.git/objects/66/2ab82e0cca9fd46a41b95fb846cd9bf22c1a62 matches
Binary file ./.git/objects/3c/39571f6b475c05d6e5dc27adeaad215fe65900 matches
Binary file ./.git/objects/56/1b2dbe2819e61d34c2fc10930b06ddcdb936d4 matches
Binary file ./.git/objects/3d/2e1cf7ad9ff2b8383f90d4bca156aa953a17c7 matches
Binary file ./.git/objects/60/2ac9fe80f8594258f4cd408d2048eac3ccc117 matches
Binary file ./.git/objects/60/bceac458d1aea0739e8752d9395288c5f2e892 matches
Binary file ./.git/objects/34/5fbe5293674c2ff8490f278386e9f0a155d0f4 matches
Binary file ./.git/objects/5a/4b2bc08f254ffc3bc400de08c15d8061062b9a matches
Binary file ./.git/objects/02/5ac3ed2b0b26cb845fcb55e3650e0289eaa6a8 matches
Binary file ./.git/objects/ad/2e60a3d83102e79f5617487898175a2bdb6a5b matches
Binary file ./.git/objects/d0/c4226b56b764e3c7f8b7b3eaa4a6d85957747d matches
Binary file ./.git/objects/b3/5f36987103f220713d07122bb3756a0d19551b matches
Binary file ./.git/objects/b4/b4ab96b43bc2180692590e6e8ebcc9e2912c36 matches
Binary file ./.git/objects/d1/a104af67c521e85669f7877ff8681a4bf8fbdf matches
Binary file ./.git/objects/e5/50798e3bdce0c25e2fc407b016c600ee1f45f3 matches
Binary file ./.git/objects/f3/da187c08335f62947cebe4cccf26841f291bbc matches
Binary file ./.git/objects/c8/9de6df79656e1c8a1972f81ab6c88b79ec5f11 matches
Binary file ./.git/objects/18/2149d6cc766efbc07c4c0062c318d194d13bd4 matches
Binary file ./.git/objects/18/239cedfeed14fd60df8e685963ed0059bc43a3 matches
Binary file ./.git/objects/4b/94e893fad52f654e7c859af00cf276ca560e30 matches
Binary file ./.git/objects/29/00553710056c687ad75e14c601e5cd37d97e67 matches
Binary file ./.git/objects/29/eeb2c8b9814dc95681ffa281f28a8e3e19295e matches
Binary file ./.git/objects/7c/19c329cdff1d823cdaa748991a0a09d19dfee7 matches
Binary file ./.git/objects/89/2b9433e953f8e04dac8b5f99332a52a855d3e4 matches
Binary file ./.git/objects/45/69bef3ef5c1c9c120eeb1bdf83333694c59969 matches
Binary file ./.git/objects/73/c7518339bfb6d3b4e8acf403e9c2bcc08b4f4c matches
Binary file ./.git/objects/87/0e8d077bddb5448c3bafba6ccb33dd230744d3 matches
Binary file ./.git/objects/87/0ec621b80e054eb922719c850688ed43a2e419 matches
Binary file ./.git/objects/80/cac02d17ae58ba4a3871c1603f205b86eec855 matches
Binary file ./.git/objects/17/93dab947a6dbff356d8a210c6a3a71dcb35a45 matches
Binary file ./.git/objects/7e/8035cbb3cd263528edb3237950f8233e5c24e5 matches
Binary file ./.git/objects/4c/2adbbed73e915887b2164da589fba3a55df249 matches
Binary file ./.git/objects/4d/616304bb7b3cb66310b2b48424b504ace2418d matches
Binary file ./.git/objects/75/df6fd6a80445f6a1325ebe7b387dc046b9b237 matches
Binary file ./.git/objects/86/2888ffbdcee901552d3eeac306b894ec7bd8fe matches
Binary file ./.git/objects/6e/32d918d0570eea7e54be5b67737a550e07b60e matches
Binary file ./.git/objects/36/ca70c1c449735d6341a0a782d5bfa561694aa0 matches
Binary file ./.git/objects/30/1363114ba58ced3f4de97695be74937c05a924 matches
Binary file ./.git/objects/5b/744d896d1d7d9677b0a8223476dbc10117b457 matches
Binary file ./.git/objects/08/32ae19bfbfe1d2b73a66680fa1bf9b0c58ac71 matches
Binary file ./.git/objects/08/333afd64002cea02362ac5ecc576a8248a5b10 matches
Binary file ./.git/objects/39/2808a85c4902718a71852d45614930a9384d57 matches
Binary file ./.git/objects/d4/7f95e411d5bc16688b0cabe0c22333987d43c4 matches
Binary file ./.git/objects/b8/67b1362cf2dff29df881c4c09ffedc17412ac8 matches
Binary file ./.git/objects/dd/343b143d1b761fd4b9584a6074ec14b624c559 matches
Binary file ./.git/objects/a9/ba318813ab342802e0833a1fb04d4a985b5aea matches
Binary file ./.git/objects/aa/78463865b04c678316fade12d9a0ff8dabaf69 matches
Binary file ./.git/objects/ef/8efa9f28e64dd198d759bd4d8fea4bf252a47a matches
Binary file ./.git/objects/c4/ddfe7233f49a4aebec9b291001022a9231596a matches
Binary file ./.git/objects/cd/8165330806bbcf5158e601bab2a50ae8c5d686 matches
Binary file ./.git/objects/f7/d888a39095327b59e804c03a35cebf882c61e9 matches
Binary file ./.git/objects/ff/a4f6e0e34b2db2c6d84b058e944affa5ace818 matches
Binary file ./.git/objects/f8/49e8bbec12bce3d56df2252ad7a4d0ef66699b matches
Binary file ./.git/objects/46/32712f6aacecb7f3b4b813d327392fdfed46a9 matches
Binary file ./.git/objects/46/949db58c8314fe4e70ff0495a5f36c18cfc936 matches
Binary file ./.git/objects/2c/384ffdee9d1e316cf2c0a401ccd0d8e0c6db93 matches
Binary file ./.git/objects/41/7c58fefb395e92aa6acaa924200088368442ee matches
Binary file ./.git/objects/24/182f3804cd339577a28fddf530c5f978b65b89 matches
Binary file ./.git/objects/23/44908fa0c8640e6ed8a8a074f5f389db4c6a08 matches
Binary file ./.git/objects/23/e50d785721fc347f9ab2102bc7f9f477785404 matches
Binary file ./.git/objects/4f/b7cc0f4b44196234e73e1d7852e20bdc3175fc matches
Binary file ./.git/objects/49/b7553b9c094efe7740899296818895df014bf4 matches
Binary file ./.git/objects/2e/9e0f40faab435b4e6c949fd232672dae64e713 matches
